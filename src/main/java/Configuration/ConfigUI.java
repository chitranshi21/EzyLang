package Configuration;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.util.Map;
import java.util.Set;

public class ConfigUI {
    private JPanel rootPanel;
    private JComboBox SourceDropDown;
    private JTextArea AccessKeyText;
    private JComboBox TargetDropDown;
    private JLabel TargetLabel;
    private JLabel AccessKeyLabel;
    private JLabel SourceLabel;
    private JPanel TopLeft;

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public void createUIComponents(ConfigDTO configDTO) {
        Map<String, String> map = configDTO._langCodesMap;
        Set<String> langCodes = map.keySet();

        for (String lang : langCodes) {
            ComboItem itemToInsert = new ComboItem(map.get(lang), lang);
            TargetDropDown.addItem(itemToInsert);
            SourceDropDown.addItem(itemToInsert);
            if (lang.equals(configDTO.getTargetLang())) {
                TargetDropDown.setSelectedItem(itemToInsert);
            }
            if (lang.equals(configDTO.getSourceLang())) {
                SourceDropDown.setSelectedItem(itemToInsert);
            }
        }
        AccessKeyText.setText(configDTO.getKey());
    }

    public String getAccessKey() {
        return AccessKeyText.getText();
    }

    public String getTargetLang() {
        Object item = TargetDropDown.getSelectedItem();
        return ((ComboItem) item).getValue();
    }

    public String getSourceLang() {
        Object item = SourceDropDown.getSelectedItem();
        return ((ComboItem) item).getValue();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(6, 1, new Insets(0, 0, 0, 0), -1, -1));
        TopLeft = new JPanel();
        TopLeft.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.add(TopLeft, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        SourceLabel = new JLabel();
        SourceLabel.setText("Source Language");
        TopLeft.add(SourceLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        SourceDropDown = new JComboBox();
        TopLeft.add(SourceDropDown, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        AccessKeyText = new JTextArea();
        AccessKeyText.setText("");
        TopLeft.add(AccessKeyText, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(150, -1), null, 0, false));
        TargetLabel = new JLabel();
        TargetLabel.setText("Target Language");
        TopLeft.add(TargetLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        AccessKeyLabel = new JLabel();
        AccessKeyLabel.setText("Yandex Access Key");
        AccessKeyLabel.setVerticalAlignment(1);
        TopLeft.add(AccessKeyLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(36, 116), null, 0, false));
        TargetDropDown = new JComboBox();
        TopLeft.add(TargetDropDown, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        rootPanel.add(spacer2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        rootPanel.add(spacer3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        rootPanel.add(spacer4, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        rootPanel.add(spacer5, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        SourceLabel.setLabelFor(SourceDropDown);
        TargetLabel.setLabelFor(TargetDropDown);
        AccessKeyLabel.setLabelFor(AccessKeyText);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    class ComboItem {
        private String key;
        private String value;

        public ComboItem(String key, String value) {
            this.key = key;
            this.value = value;
        }

        @Override
        public String toString() {
            return key;
        }

        public String getValue() {
            return value;
        }
    }
}
